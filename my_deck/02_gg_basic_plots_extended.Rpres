Dataviz with R
========================================================
author: Basic Plots
transition: rotate
transition-speed: slow
width: 1440
height: 900
incremental: true
date: `r format(Sys.Date(), format="%B %d, %Y")`
css: ./theme/serif.css

<small> Tony Fujs </small>

```{r setup, echo=FALSE}
library(knitr)
library(highlight)
library(ggplot2)
library(ggthemes)
library(scales)
opts_chunk$set(cache = TRUE, fig.align = 'right')
#options(digits = 2, tidy.opts=list(width=500))
#wd <- setwd("C:/Users/tony/Dropbox/[Miscellaneous]/Presentations/EERS/EERS 2014/ggplot_workshop")
#opts_knit$set(root.dir = wd)
load('../data/data.Rdata')
```

Data set
====================================
incremental: false

```{r, echo = FALSE}
print(summary2005[1:5 ,2:4], row.names = FALSE)
```

Scatter plot
====================================
left: 55%

```{r, eval = FALSE}
# population vs stores
ggplot(
aes(x = "XXXX",
    y = "XXXX"),
data = walmart2005) +
geom_point() 
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population, y = stores),
  data = summary2005) +
  geom_point() 
```


Scatter plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# population vs stores
ggplot(
aes(x = "population", 
    y = "stores"),
data = walmart2005) +
geom_point() 
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population, y = stores),
  data = summary2005) +
  geom_point() 
```


Scatter plot + regression line
====================================
left: 55%

```{r, eval = FALSE}
# Complete code to add a regression line
# Hint: Use the cheat sheet to find the right geom
ggplot(
aes(x = population,
    y = stores),
data = walmart2005) +
geom_point() +
"geom_XXXX"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population, y = stores),
  data = summary2005) +
  geom_point() +
  geom_smooth()
```


Scatter plot + regression line
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Complete code to add a regression line
# Hint use the cheat sheet
ggplot(
aes(x = population,
    y = stores),
data = walmart2005) +
geom_point() +
"geom_smooth()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population, y = stores),
  data = summary2005) +
  geom_point() +
  geom_smooth()
```


Scatter plot + regression line
====================================

EMPHASIZE CONCEPT OF LAYERING

Bubble chart
====================================
left: 55%

```{r, eval = FALSE}
# Bubbles represent market_share 
ggplot(
  aes(x = population, 
      y = stores,
      "XXXX" = market_share),
  data = summary2005) +
  geom_point()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population, y = stores,
      size = market_share),
  data = summary2005) +
  geom_point()
```


Bubble chart
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Bubbles represent market_share
ggplot(
  aes(x = population, 
      y = stores,
      "size" = market_share),
  data = summary2005) +
  geom_point()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population, y = stores,
      size = market_share),
  data = summary2005) +
  geom_point()
```


Histogram
====================================
left: 55%

```{r, eval = FALSE}
# Histogram of population
# Hint: Use the cheat sheet to find the right geom
ggplot(
  aes(x = population),
  data = summary2005) +
  "geom_XXXX()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population),
  data = summary2005) +
  geom_histogram()
```


Histogram
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Histogram of population
ggplot(
  aes(x = population),
  data = summary2005) +
  "geom_histogram()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population),
  data = summary2005) +
  geom_histogram()
```


Density Plot
====================================
left: 55%

```{r, eval = FALSE}
# Density plot of population
ggplot(
  aes(x = population),
  data = summary2005) +
  "geom_XXXX()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population),
  data = summary2005) +
  geom_density()
```


Density Plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Histogram of population
ggplot(
  aes(x = population),
  data = summary2005) +
  "geom_density()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population),
  data = summary2005) +
  geom_density()
```


Histogram + Density Plot
====================================
left: 55%

```{r, eval = FALSE}
# Histogram + Density on the same plot
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  "XXXX"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  geom_histogram() +
  geom_density(color = 'red')
```


Histogram + Density Plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Histogram + Density on the same plot
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  "geom_histogram()" +
  "geom_density()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  geom_histogram() +
  geom_density(color = 'red')
```


Histogram + RED Density Plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Change the density plot color to RED
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  geom_histogram() +
  geom_density("XXXX")
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  geom_histogram() +
  geom_density(color = 'red')
```


Histogram + RED Density Plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Change the density plot color to RED
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  geom_histogram() +
  geom_density("color = 'red'")
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population,
      y = ..density..),
  data = summary2005) +
  geom_histogram() +
  geom_density(color = 'red')
```


Histogram + RED Density Plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Why doesn't this work??
ggplot(
  aes(x = population,
      y = ..density..,
      "color = 'red'"),
  data = summary2005) +
  geom_histogram() +
  geom_density()
```

***

Histogram + RED Density Plot
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Why doesn't this work??
ggplot(
  aes(x = population,
      y = ..density..,
      "color = 'red'"),
  data = summary2005) +
  geom_histogram() +
  geom_density()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = population,
      y = ..density..,
      color = 'red'),
  data = summary2005) +
  geom_histogram() +
  geom_density()
```

Plots layers: Defaults values
====================================

EMPHASIZE the difference between values in ggplot() & values in geom_XXXX()

Bar chart - Unordered
====================================
left: 55%

```{r, eval = FALSE}
ggplot(
  aes(x = state,
      y = population),
  data = summary2005) +
  geom_bar("stat = 'identity'")
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = state,
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity')
```


Bar chart - ordered
====================================
left: 55%

```{r, eval = FALSE}
ggplot(
  aes(x = "reorder(state, population)",
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity')
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = reorder(state, population),
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity')
```


Bar chart - ordered & flipped
====================================
left: 55%

```{r, eval = FALSE}
# Update code to flip this bar chart (States will show vertically)
ggplot(
  aes(x = reorder(state, population),
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity') +
  "coord_XXXX"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = reorder(state, population),
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity') +
  coord_flip()
```


Bar chart - ordered & flipped
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Update code to flip this bar chart (States will show vertically)
ggplot(
  aes(x = reorder(state, population),
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity') +
  "coord_flip()"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = reorder(state, population),
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity') +
  coord_flip()
```


TAKE A GUESS!!
====================================
type: practice
left: 65%
incremental: false

```{r, eval = FALSE}
# WHY CAN'T WE JUST SWITCH AESTHETICS??
ggplot(
  aes("x = population"),
      "y = reorder(state, population)"),
  data = summary2005) +
  geom_bar(stat = 'identity') +
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = reorder(state, population),
      y = population),
  data = summary2005) +
  geom_bar(stat = 'identity') +
  coord_flip()
```

DATASET
====================================
incremental: false

```{r, echo = FALSE}
print(summary95_05[1:5 ,1:4], row.names = FALSE)
print(summary95_05[(nrow(summary95_05)-5):(nrow(summary95_05)),1:4], row.names = FALSE)
```

Bar chart - continued
====================================
left: 55%

```{r, eval = FALSE}
# Update the code so each bar represents the total population of the US for each year
ggplot(
aes(x = factor(year),
    y = population),
data = summary95_05) +
geom_bar(stat = 'identity',
         position = 'identity')
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = factor(year),
      y = population),
  data = summary95_05) +
  geom_bar(stat = 'identity',
           position = 'identity') +
  scale_y_continuous(labels = comma)
```


Bar chart - continued
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
ggplot(
aes(x = factor(year),
    y = population),
data = summary95_05) +
geom_bar(stat = 'identity',
         "position = 'stack'")
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
aes(x = factor(year),
      y = population),
  data = summary95_05) +
  geom_bar(stat = 'identity',
           position = 'stack') +
  scale_y_continuous(labels = comma)
```


DATASET
====================================
incremental: false

```{r, echo = FALSE}
print(summary[1:5 ,1:4], row.names = FALSE)
print(summary[(nrow(summary)-5):(nrow(summary)),1:4], row.names = FALSE)
```

Line chart - Iteration 1
====================================
left: 55%
incremental: false

### Objective:
Visualize increase of stores over time, by state

```{r, eval = FALSE}
# Not what we are expecting...
ggplot(
  aes(x = year,
      y = stores),
  data = summary) +
  geom_line()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores),
  data = summary) +
  geom_line()
```


Line chart - Iteration 1
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Fix the code below to produce this plot
ggplot(
  aes(x = year,
      y = stores),
  data = summary) +
  geom_line()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores,
      group = state),
  data = summary) +
  geom_line()
```

Line chart - Iteration 1
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Fix the code below to produce this plot
ggplot(
  aes(x = year,
      y = stores,
      "group = state"),
  data = summary) +
  geom_line()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores,
      group = state),
  data = summary) +
  geom_line()
```

Line chart - Iteration 2
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Edit code to change lines color depending on state
ggplot(
  aes(x = year,
      y = stores,
      group = state),
  data = summary) +
  geom_line()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      color = state),
  data = summary) +
  geom_line(aes(group = state))
```


Line chart - Iteration 2
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Edit code to change lines color depending on state
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      "color = state"),
  data = summary) +
  geom_line()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      color = state),
  data = summary) +
  geom_line(aes(group = state))
```


Line chart - Iteration 3
====================================
left: 55%

```{r, eval = FALSE}
# Edit the code to produce the following small multiple
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      color = state),
  data = summary) +
  geom_line()
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      color = state),
  data = summary) +
  geom_line(aes(group = state)) +
  facet_wrap(~state) +
  theme(legend.position = 'none')
```


Line chart - Iteration 4
====================================
left: 55%
incremental: false

```{r, eval = FALSE}
# Edit the code to produce the following small multiple
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      color = state),
  data = summary) +
  geom_line() +
  "facet_wrap(~state)"
```

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot(
  aes(x = year,
      y = stores,
      group = state,
      color = state),
  data = summary) +
  geom_line(aes(group = state)) +
  facet_wrap(~state) +
  theme(legend.position = 'none')
```







