R you ready to ggplot2?
========================================================
author: Advanced Plots
transition: rotate
transition-speed: slow
width: 1440
height: 900
incremental: true
date: June 5, 2014
css: ../theme/my_style.css

<small> Tony Fujs </small>

```{r setup, echo=FALSE}
library(knitr)
library(ggplot2)
library(ggthemes)
library(scales)
opts_chunk$set(cache = TRUE, fig.align = 'right')
load('../../data/data.Rdata')
```

Minard: Troops data set
====================================
incremental: false

```{r, echo = FALSE}
print(troops[1:5 ,], row.names = FALSE)
```

Minard: Iteration 1
====================================
incremental: false
left: 55%

### Plot troups location over time with a line

<pre><code class="r">
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group),
  data = troops)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group),
  data = troops)
```

Minard: Iteration 2
====================================
incremental: false
left: 55%

### Add color to show direction of the troups

<pre><code class="r">
# EDIT CODE
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group),
  data = troops)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction),
  data = troops)
```


Minard: Iteration 2
====================================
incremental: false
left: 55%

### Add color to show direction of the troups

<pre><code class="r">
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group,
      <b>color = direction</b>),
  data = troops)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction),
  data = troops)
```

Minard: Iteration 3
====================================
incremental: false
left: 55%

### Adjust line size to show number of survivors

<pre><code class="r">
# EDIT CODE
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction),
  data = troops)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round')
```


Minard: Iteration 3
====================================
incremental: false
left: 55%

Adjust line size to show number of survivors

<pre><code class="r">
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      <b>size = survivors</b>),
  data = troops)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round')
```


Minard: Data set
====================================
incremental: false

```{r, echo = FALSE}
print(cities[1:5 ,], row.names = FALSE)
```


Minard: Iteration 4
====================================
incremental: false
left: 55%

### Add cities on the plot (One point for each city)

<pre><code class="r">
<b># EDIT CODE 
# (You must add a complete layer)</b>
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities)
```


Minard: Iteration 4
====================================
incremental: false
left: 55%

Add cities on the plot (One point for each city)

<pre><code class="r">
# EDIT CODE 
# (You must add a complete layer)
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops) +
<b>geom_point(
    aes(
      x = long,
      y = lat),
    data = cities)</b>
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities)
```


Minard: Iteration 5
====================================
incremental: false
left: 55%

### Add city names on the plot beside each corresponding point

<pre><code class="r">
<b># EDIT CODE 
# (You must add a complete layer)</b>
ggplot() +
geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops) +
geom_point(
    aes(
      x = long,
      y = lat),
    data = cities)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat, label = city),
		data = cities)
```

Minard: Iteration 5
====================================
incremental: false
left: 55%

Add city names on the plot beside each corresponding point

<pre><code class="r">
ggplot() +
geom_path(...) +
geom_point(...) +
<b>geom_text(
       aes(x = long,
           y = lat,
           label = city),
       data = cities)</b>
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat, label = city),
		data = cities)
```



Minard: Iteration 5
====================================
incremental: false
left: 55%

### Something wrong with the labels?

<pre><code class="r">
<b># Deal with overlapping</b>
ggplot() +
geom_path(...) +
geom_point(...) +
<b>geom_text(
       aes(x = long,
           <b>y = lat</b>,
           label = city),
       data = cities)</b>
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat, label = city),
		data = cities)
```

Minard: Iteration 5
====================================
incremental: false
left: 55%

Deal with overlapping

<pre><code class="r">
ggplot() +
geom_path() +
geom_point() +
geom_text(
		aes(x = long,
				<b>y = lat - 0.03</b>,
				label = city),
		data = cities)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat - 0.03, label = city),
		data = cities)
```


Minard: Iteration 5
====================================
incremental: false
left: 55%

### City names: Reduce font size
(Setting size inside or outside aes()?)

<pre><code class="r">
ggplot() +
geom_path(XXXX) +
geom_point(XXXX) +
geom_text(
		aes(x = long,
				y = lat - 0.03,
				label = city),
        <b>size = 4</b>,
		data = cities)
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat - 0.03, label = city),
		size = 4,
		data = cities)
```


Minard: Iteration 6
====================================
incremental: false
left: 55%

### Customize the line colors

<pre><code class="r">
<b># Which component of the gg does control the line colors?</b>
ggplot() +
geom_path(XXXX) +
geom_point(XXXX) +
geom_text() +
<b>?????</b>
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat - 0.03, label = city),
		size = 4,
		data = cities) +
	scale_color_manual(values = c('grey50','red'))
```



Minard: Iteration 6
====================================
incremental: false
left: 55%

Customize the line colors

<pre><code class="r">
# Which component of the gg does control the line colors?
ggplot() +
geom_path(XXXX) +
geom_point(XXXX) +
geom_text() +
<b>scale_color_manual(
  values = c('grey50','red'))</b>
</code></pre>

***

```{r, echo = FALSE, out.height = 700, out.width = 700}
ggplot() +
  geom_path(
  aes(x = long,
      y = lat,
      group = group,
      color = direction,
      size = survivors),
  data = troops,
  lineend = 'round') +
  geom_point(
    aes(
      x = long,
      y = lat),
    data = cities) +
	geom_text(
		aes(x = long, y = lat - 0.03, label = city),
		size = 4,
		data = cities) +
	scale_color_manual(values = c('grey50','red'))
```