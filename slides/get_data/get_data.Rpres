Get data
========================================================
transition: rotate
transition-speed: slow
width: 1440
height: 900
incremental: true
date: `r format(Sys.Date(), format="%B %d, %Y")`
css: ../theme/my_style.css

```{r setup, echo=FALSE}
opts_chunk$set(cache = FALSE, fig.align = 'right')
library(foreign)
```


Package
========================================================
incremental: false

__R package__ is the __equivalent__ of a smartphone __app__.     
     
Allows you to do more stuff.

***

![](../tof/smartphone.jpg)


R & Rstudio
========================================================
incremental: false

![](../tof/rstudio.png)


Get data: The working directory
========================================================
incremental: false

Need to tell R where to look for
```{r, eval=FALSE}
getwd()
list.files()
list.files('./data')

setwd('./data')
getwd()
list.files()

setwd('..')
getwd()
```

Everything is an object
========================================================
incremental: false

Try this
```{r, eval=FALSE}
my_files <- list.files('./data')
my_files
my_files[1]
```

Get data: Read .csv files
========================================================
incremental: false

Now that R knows where to look for, let's grab some data
```{r, eval=FALSE}
?read.csv
```

Get data: Read .csv files
========================================================
incremental: false

```{r, eval=FALSE}
read.csv('Alabama.csv') 

# What's wrong?
```

Get data: Read .csv files
========================================================
incremental: false

```{r, eval=FALSE}
read.csv('./data/Alabama.csv') 
```

Get data: Read .csv files
========================================================
incremental: false

```{r, eval=FALSE}
df <- read.csv('./data/Alabama.csv') 

# Check environment window
```

Get data: Read stata files
========================================================
incremental: false

```{r, eval=FALSE}
library(foreign)
df <- read.dta('./data/Alabama.dta')
```

Get data: Quick pick
========================================================
incremental: false

```{r, eval=FALSE}
head(df)

# Get first 6 rows
```

Get data: Quick pick
========================================================
incremental: false

```{r, eval=FALSE}
head(df, 10)

# Get first 10 rows
```

Get data: Quick pick
========================================================
incremental: false

```{r, eval=FALSE}
summary(df)

# Summary stats
```

Get data: Quick pick
========================================================
incremental: false

```{r, eval=FALSE}
str(df)

# Object structure
```

Get data: Quick pick
========================================================
incremental: false

```{r, eval=FALSE}
View(df)

# Object structure
```

Get data: Quick pick
========================================================
incremental: false

```{r, eval=FALSE}
table(df$pre, df$post)


# Crosstabs
```


Clean data: Remove incomplete records
========================================================
incremental: false

```{r, eval=FALSE}
complete.cases(df) 

# logical vector
```

Clean data: Remove incomplete records
========================================================
incremental: false

```{r, eval=FALSE}
complete.cases(df) 

# logical vector
```

Clean data: Remove incomplete records
========================================================
incremental: false

```{r, eval=FALSE}
sum(complete.cases(df))

# ??? What happened here?
```

Clean data: Remove incomplete records
========================================================
incremental: false

```{r, eval=FALSE}
sum(complete.cases(df))

# What happened here?
# Why is it useful?
```

Clean data: Remove incomplete records
========================================================
incremental: false

Compute number of complete / missing records
```{r, eval=FALSE}
paste("The dataset contained", sum(complete.cases(df)), "complete records" )
```

Clean data: Remove incomplete records
========================================================
incremental: false

Remove incomplete records
```{r, eval=FALSE}
df <- subset(df, complete.cases(df))
```


Publishing results
========================================================
incremental: false

* Review .Rpres documents
* Time permitting: Review demo code
